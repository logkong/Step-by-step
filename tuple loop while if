{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyORqBqK8IqeN93qQQJ7BU6k",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/logkong/Step-by-step/blob/main/tuple%20loop%20while%20if\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6Vex3eyoE_cU",
        "outputId": "1dd9653a-c418-46f0-adf9-da389468777b"
      },
      "source": [
        "tuple1=(0,1,2,3,('a','b','c'),5)\n",
        "tuple1[2]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gf6bRbhxGYHY",
        "outputId": "17e4ec92-eb29-4a25-b00c-7e4326d1b0a0"
      },
      "source": [
        "tuple1[4]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('a', 'b', 'c')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9ARDHU66GtmP",
        "outputId": "e3f2398c-0175-4f43-ad14-fbe22a21e555"
      },
      "source": [
        "tuple1[1:3]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 2)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3JvHPOA3H9VB",
        "outputId": "72f0d74f-3988-47ee-d481-7719609eb832"
      },
      "source": [
        "str1='파이썬 최고'\n",
        "'썬 최' in str1"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bPt_L1qmKFll",
        "outputId": "dff82cc0-ad88-4fb9-980c-7f78faaa80c6"
      },
      "source": [
        "number=1\n",
        "while number<=3:\n",
        "  print(number)\n",
        "  number += 1"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "1\n",
            "2\n",
            "3\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yeHgJ_zOLifU",
        "outputId": "fceca000-abe2-423a-fadc-7072de61a0cf"
      },
      "source": [
        "code=0\n",
        "while code<=13:\n",
        "  print('토템들 퍗팅')\n",
        "  code +=1"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n",
            "토템들 퍗팅\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 139
        },
        "id": "pAap1tXONiTP",
        "outputId": "d1bfbd61-021b-4b7e-d106-0191189eb078"
      },
      "source": [
        "number=1\n",
        "while True:\n",
        "  print(number)\n",
        "  number+=1\n",
        "  if number > 2:\n",
        "  break"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-21-109053d4e8f2>\"\u001b[0;36m, line \u001b[0;32m6\u001b[0m\n\u001b[0;31m    break\u001b[0m\n\u001b[0m        ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m expected an indented block\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WWIQLURDNYuZ",
        "outputId": "ce75734b-705c-4bdd-9e17-a41bb63e150c"
      },
      "source": [
        "list_food=['햄버거','치킨','피자']\n",
        "for food in list_food:\n",
        "  print(food)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "햄버거\n",
            "치킨\n",
            "피자\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 139
        },
        "id": "ZjA_sRhSUi4K",
        "outputId": "8050b176-3d02-4de5-d74e-393367e1a71f"
      },
      "source": [
        "score_list = [68, 64, 100, 56, 76]\n",
        "number = 1\n",
        "for score in score_list:\n",
        "  if score >=70:\n",
        "    result='합격'\n",
        " else:\n",
        "      result='불합격'\n",
        "    print ('{}번 학생은 {}입니다'.format(number, result))\n",
        "    number+=1\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-32-614293c9ae7d>\"\u001b[0;36m, line \u001b[0;32m6\u001b[0m\n\u001b[0;31m    else:\u001b[0m\n\u001b[0m         ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unindent does not match any outer indentation level\n"
          ]
        }
      ]
    }
  ]
}